plugins {
			id 'org.springframework.boot' version '2.2.2.RELEASE'
			id 'io.spring.dependency-management' version '1.0.8.RELEASE'
			id 'java'
		}
def app=[
		group: 'com.prismamp.todopago' ,
		name: 'mockbe' ,
		version: '0.0.1',
		versionType: 'SNAPSHOT'
]
group = 'com.bpservice'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'


repositories {
	mavenCentral()
}

// tag::xsd[]
task genJaxb {
	ext.sourcesDir = "${buildDir}/generated-sources/jaxb"
	ext.classesDir = "${buildDir}/classes/jaxb"
	ext.schema = "src/main/resources/banelco.xsd"

	outputs.dir classesDir

	doLast() {
		project.ant {
			taskdef name: "xjc", classname: "com.sun.tools.xjc.XJCTask",
					classpath: configurations.jaxb.asPath
			mkdir(dir: sourcesDir)
			mkdir(dir: classesDir)

			xjc(destdir: sourcesDir, schema: schema) {
				arg(value: "-wsdl")
				produces(dir: sourcesDir, includes: "**/*.java")
			}

			javac(destdir: classesDir, source: 1.6, target: 1.6, debug: true,
					debugLevel: "lines,vars,source", includeantruntime: false,
					classpath: configurations.jaxb.asPath) {
				src(path: sourcesDir)
				include(name: "**/*.java")
				include(name: "*.java")
			}

			copy(todir: classesDir) {
				fileset(dir: sourcesDir, erroronmissingdir: false) {
					exclude(name: "**/*.java")
				}
			}
		}
	}
}
// end::xsd[]

// tag::jaxb[]
configurations {
	jaxb
}

bootJar {
	baseName = app.name
	version =  "${app.version}-${app.versionType}"
	from genJaxb.classesDir
}
// end::jaxb[]

// tag::dependencies[]
dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-web-services'
	implementation 'wsdl4j:wsdl4j:1.6.1'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	jaxb("org.glassfish.jaxb:jaxb-xjc:2.2.11")
	compile(files(genJaxb.classesDir).builtBy(genJaxb))
	compile('javax.xml.bind:jaxb-api:2.3.0')
	compile('javax.activation:activation:1.1')
	compile('org.glassfish.jaxb:jaxb-runtime:2.3.0')
	runtimeOnly 'mysql:mysql-connector-java'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
}
// end::dependencies[]
